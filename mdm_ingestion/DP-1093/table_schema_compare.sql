WITH 
params AS (
  SELECT
    'ODS' AS source_schema,
    'PROD_CJVRDC' AS source_database,
    'STAGE_VRDC' AS target_schema,
    'LOCAL_JUANVAGO' AS target_database
),
table_list AS (
  SELECT 
    column1 as target_table,
    column2 as source_table,
    column3 as file_base_name
  FROM
  (
    VALUES
      ('CJI_COST_SCORECARD','VRDC_CJI_COST_SCORECARD','vrdc_cji_cost_scorecard'),
      ('CJI_OUTCOMES_SCORECARD','VRDC_CJI_OUTCOMES_SCORECARD','vrdc_cji_outcomes_scorecard'),
      ('CJI_PAC_COST_SCORECARD','VRDC_CJI_PAC_COST_SCORECARD','no data'),
      ('CJI_PAC_OUTCOMES_SCORECARD','VRDC_CJI_PAC_OUTCOMES_SCORECARD','no data'),
      ('CLAIM_ACTIVITY_ICD_DM','VRDC_ICD_DX_X_NPI','AXB_ICD_DX_X_NPI'),
      ('CLAIM_ACTIVITY_PROC','VRDC_HCPCS_X_NPI','AXB_HCPCS_X_NPI'),
      ('EGM_ACO','VRDC_EGM_ACO','no data'),
      ('EGM_GEO','VRDC_EGM_GEO','egm_geo'),
      ('EGM_NPI','VRDC_EGM_NPI','vrdc_egm_npi'),
      ('NA_BENCHMARKS','VRDC_NA_BENCHMARKS','BENCHMARKS_EXPORT'),
      ('NA_BILL_NPI_X_CCN','N/A','NA_BILL_NPI_X_CCN'),
      ('NA_BILL_NPI_X_NPI','N/A','NA_BILL_NPI_X_NPI'),
      ('NA_BPCI_PCP','VRDC_BPCI_PCP','no data'),
      ('NA_BPCI_TRIGGER_PROVIDER','VRDC_BPCI_TRIGGER_PROVIDER','no data'),
      ('NA_GEOGRAPHY','VRDC_NA_GEOGRAPHY','no data'),
      ('NA_HASHED_TIN_X_BILL_NPI','VRDC_NA_HASHED_TIN_X_BILL_NPI','NA_HASHED_TIN_X_BILL_NPI'),
      ('NPI_X_PROVIDER_ZIP','VRDC_NPI_X_PROVIDER_ZIP','NA_REF_NPI_X_PROVIDER_ZIP'),
      ('NPI_X_SPECIALTY','VRDC_NPI_X_SPECIALTY','NPI_X_SPECIALTY_EXPORT'),
      ('PPI_COST_SCORE','VRDC_PPI_COST_SCORE','PPI_COST_SCORE'),
      ('PPI_COST_SCORECARD','VRDC_PPI_COST_SCORECARD','PPI_COST_SCORECARD'),
      ('PPI_CROSSWALK','VRDC_PPI_CROSSWALK','no data'),
      ('PPI_PAC_COST_SCORE','VRDC_PPI_PAC_COST_SCORE','no data'),
      ('PPI_PAC_COST_SCORECARD','VRDC_PPI_PAC_COST_SCORECARD','no data'),
      ('PPI_PAC_CROSSWALK','VRDC_PPI_PAC_CROSSWALK','no data'),
      ('PPI_PAC_QUALITY_SCORE','VRDC_PPI_PAC_QUALITY_SCORE','no data'),
      ('PPI_PAC_QUALITY_SCORECARD','VRDC_PPI_PAC_QUALITY_SCORECARD','no data'),
      ('PPI_QUALITY_SCORE','VRDC_PPI_QUALITY_SCORE','NA_NPI_PPI_OUTCOMES_OPH_PROD'),
      ('PPI_QUALITY_SCORECARD','VRDC_PPI_QUALITY_SCORECARD','PPI_OUTCOMES_SCD_OPH_PROD'),
      ('PRACTICE_GROUP_LOOKUP','VRDC_PRACTICE_GROUP_LOOKUP','na_ref_practice_group_lookup'),
      ('PROVIDER_COST_UTILIZATION','N/A','EXPL_BILL_NPI_MSSP_PMPY'),
      ('PROVIDER_COST_UTILIZATION_ATTR','VRDC_PROFILE_LIST_ATTR_NPI','METRICS_PCP_EXPORT'),
      ('PROVIDER_COST_UTILIZATION_ATTR_PG','VRDC_PROFILE_LIST_ATTR_PG','ATTR_PG_PROFILE_LIST_EXPORT'),
      ('PROVIDER_COST_UTILIZATION_FACILITY','VRDC_PROFILE_LIST_FACILITY','profile_list_facility'),
      ('PROVIDER_COST_UTILIZATION_POST_ACUTE','VRDC_PROFILE_LIST_POST_ACUTE','no data'),
      ('PROVIDER_COST_UTILIZATION_PRAC','VRDC_PROFILE_LIST_PROVIDER','no data'),
      ('PROVIDER_COST_UTILIZATION_RNDRG_PG','VRDC_PROFILE_LIST_RNDRG_PG','profile_list_rndrg_pg_partd'),
      ('PROVIDER_COST_UTILIZATION_SPECIALIST','VRDC_PROFILE_LIST_SPECIALIST','profile_list_specialist'),
      ('REFERRALS','VRDC_REFERRALS','NA_REFERRAL_PRO_TO_PRO'),
      ('UTILIZATION_PCP','VRDC_UTILIZATION_PCP','NA_UTILIZATION_PCP')
  )
  WHERE source_table <> 'N/A'
),
rules AS (
  SELECT 
    column1 as source_table,
    column2 as source_col,
    column3 as target_table,
    column4 as target_col
  FROM (
      VALUES 
      ('VRDC_CJI_PAC_OUTCOMES_SCORECARD','0','CJI_PAC_OUTCOMES_SCORECARD','LOAD_FILE_ROW_NUM'),
      ('VRDC_CJI_PAC_COST_SCORECARD','0','CJI_PAC_COST_SCORECARD','LOAD_FILE_ROW_NUM'),
      ('VRDC_PROFILE_LIST_ATTR_NPI','SRC_FK_PROVIDER_ID','PROVIDER_COST_UTILIZATION_ATTR','PROVIDER_ID'),
      ('VRDC_PROFILE_LIST_PROVIDER','SRC_FK_PROVIDER_ID','PROVIDER_COST_UTILIZATION_PRAC','PROVIDER_ID'),
      ('VRDC_PROFILE_LIST_SPECIALIST','SRC_FK_PROVIDER_ID','PROVIDER_COST_UTILIZATION_SPECIALIST','PROVIDER_ID'),
      ('VRDC_PROFILE_LIST_FACILITY','SRC_FK_FACILITY_ID','PROVIDER_COST_UTILIZATION_FACILITY','PROVIDER_ID'),
      ('VRDC_PROFILE_LIST_POST_ACUTE','SRC_FK_FACILITY_ID','PROVIDER_COST_UTILIZATION_POST_ACUTE','PROVIDER_ID'),
      ('VRDC_ICD_DX_X_NPI','SRC_ICD_CD','CLAIM_ACTIVITY_ICD_DM','MEDICAL_CD'),
      ('VRDC_ICD_DX_X_NPI','SRC_ICD_DESC','CLAIM_ACTIVITY_ICD_DM','MEDICAL_CD_DSCR'),
      ('VRDC_HCPCS_X_NPI','SRC_CLM_TYPE','CLAIM_ACTIVITY_PROC','CLAIM_TYPE'),
      ('VRDC_HCPCS_X_NPI','SRC_HCPCS_CD','CLAIM_ACTIVITY_PROC','MEDICAL_CD')
      )
)
SELECT 
   source_cols.table_schema AS source_schema,
   source_cols.table_name AS source_table,
   source_cols.column_name AS source_col,
   target_cols.table_schema AS target_schema,
   target_cols.table_name AS target_table,
   target_cols.column_name AS target_col,
//   source_cols.COLUMN_DEFAULT = target_cols.COLUMN_DEFAULT AS COMP_COLUMN_DEFAULT,
  source_cols.IS_NULLABLE = target_cols.IS_NULLABLE AS COMP_IS_NULLABLE,
  source_cols.DATA_TYPE = target_cols.DATA_TYPE AS COMP_DATA_TYPE,
  source_cols.CHARACTER_MAXIMUM_LENGTH = target_cols.CHARACTER_MAXIMUM_LENGTH AS COMP_CHARACTER_MAXIMUM_LENGTH,
//  source_cols.CHARACTER_OCTET_LENGTH = target_cols.CHARACTER_OCTET_LENGTH AS COMP_CHARACTER_OCTET_LENGTH,
  source_cols.NUMERIC_PRECISION = target_cols.NUMERIC_PRECISION AS COMP_NUMERIC_PRECISION,
//  source_cols.NUMERIC_PRECISION_RADIX = target_cols.NUMERIC_PRECISION_RADIX AS COMP_NUMERIC_PRECISION_RADIX,
//  source_cols.NUMERIC_SCALE = target_cols.NUMERIC_SCALE AS COMP_NUMERIC_SCALE,
  source_cols.DATETIME_PRECISION = target_cols.DATETIME_PRECISION AS COMP_DATETIME_PRECISION,
//  source_cols.INTERVAL_TYPE = target_cols.INTERVAL_TYPE AS COMP_INTERVAL_TYPE,
//  source_cols.INTERVAL_PRECISION = target_cols.INTERVAL_PRECISION AS COMP_INTERVAL_PRECISION,
  source_cols.CHARACTER_SET_CATALOG = target_cols.CHARACTER_SET_CATALOG AS COMP_CHARACTER_SET_CATALOG,
  source_cols.CHARACTER_SET_SCHEMA = target_cols.CHARACTER_SET_SCHEMA AS COMP_CHARACTER_SET_SCHEMA,
  source_cols.CHARACTER_SET_NAME = target_cols.CHARACTER_SET_NAME AS COMP_CHARACTER_SET_NAME,
  source_cols.COLLATION_CATALOG = target_cols.COLLATION_CATALOG AS COMP_COLLATION_CATALOG,
  source_cols.COLLATION_SCHEMA = target_cols.COLLATION_SCHEMA AS COMP_COLLATION_SCHEMA,
  source_cols.COLLATION_NAME = target_cols.COLLATION_NAME AS COMP_COLLATION_NAME,
  source_cols.DOMAIN_CATALOG = target_cols.DOMAIN_CATALOG AS COMP_DOMAIN_CATALOG,
  source_cols.DOMAIN_SCHEMA = target_cols.DOMAIN_SCHEMA AS COMP_DOMAIN_SCHEMA,
  source_cols.DOMAIN_NAME = target_cols.DOMAIN_NAME AS COMP_DOMAIN_NAME,
  source_cols.UDT_CATALOG = target_cols.UDT_CATALOG AS COMP_UDT_CATALOG,
  source_cols.UDT_SCHEMA = target_cols.UDT_SCHEMA AS COMP_UDT_SCHEMA,
  source_cols.UDT_NAME = target_cols.UDT_NAME AS COMP_UDT_NAME,
  source_cols.SCOPE_CATALOG = target_cols.SCOPE_CATALOG AS COMP_SCOPE_CATALOG,
  source_cols.SCOPE_SCHEMA = target_cols.SCOPE_SCHEMA AS COMP_SCOPE_SCHEMA,
  source_cols.SCOPE_NAME = target_cols.SCOPE_NAME AS COMP_SCOPE_NAME,
  source_cols.MAXIMUM_CARDINALITY = target_cols.MAXIMUM_CARDINALITY AS COMP_MAXIMUM_CARDINALITY,
  //source_cols.DTD_IDENTIFIER = target_cols.DTD_IDENTIFIER AS COMP_DTD_IDENTIFIER,
  //source_cols.IS_SELF_REFERENCING = target_cols.IS_SELF_REFERENCING AS COMP_IS_SELF_REFERENCING,
  //source_cols.IS_IDENTITY = target_cols.IS_IDENTITY AS COMP_IS_IDENTITY,
  //source_cols.IDENTITY_GENERATION = target_cols.IDENTITY_GENERATION AS COMP_IDENTITY_GENERATION,
  //source_cols.IDENTITY_START = target_cols.IDENTITY_START AS COMP_,
  //source_cols.IDENTITY_INCREMENT = target_cols.IDENTITY_INCREMENT AS COMP_,
  //source_cols.IDENTITY_MAXIMUM = target_cols.IDENTITY_MAXIMUM AS COMP_,
  //source_cols.IDENTITY_MINIMUM = target_cols.IDENTITY_MINIMUM AS COMP_,
  //source_cols.IDENTITY_CYCLE = target_cols.IDENTITY_CYCLE AS COMP_,
  source_cols.COMMENT = target_cols.COMMENT AS COMP_COMMENT
FROM table_list 
INNER JOIN DEV_STAGE_RAW.INFORMATION_SCHEMA.COLUMNS target_cols 
    ON target_cols.table_name = table_list.target_table 
    AND target_cols.table_schema = (SELECT target_schema FROM params)
LEFT JOIN rules
    ON rules.target_table = target_cols.table_name
    AND rules.target_col = target_cols.column_name
LEFT JOIN PROD_CJVRDC_FE.INFORMATION_SCHEMA.COLUMNS source_cols 
    ON source_cols.table_name = table_list.source_table
    AND source_cols.table_schema = (SELECT source_schema FROM params)
    AND 
        CASE WHEN target_cols.column_name = 'LOAD_FILE_ROW_NUM' THEN COALESCE(rules.source_col,'RECORD_ID')
        ELSE COALESCE(rules.source_col,CONCAT('SRC_',target_cols.column_name))
        END = source_cols.column_name
WHERE
target_cols.column_name NOT IN ('LOAD_FILE_NM')
AND (
  COMP_IS_NULLABLE = False
  OR COMP_DATA_TYPE = False
  OR COMP_NUMERIC_PRECISION = False
)
ORDER BY target_cols.table_schema,target_cols.table_name,target_cols.ordinal_position

